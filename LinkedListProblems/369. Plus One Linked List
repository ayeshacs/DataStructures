/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

public class Solution {
    /**
     * @param head: the first Node
     * @return: the answer after plus one
     */
    public ListNode plusOne(ListNode head) 
    {
        //reverse List
        head = reverse(head);
        //add one
        head = addOneUtil(head);
        //reverse
        head = reverse(head);
        return head;
    }
    public ListNode reverse(ListNode head)
    {
        ListNode prev = null, next = null;
        ListNode curr = head;
        
        while(curr!=null)
        {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
   }
   public ListNode addOneUtil(ListNode head)
   {
       ListNode curr = head, prev=null;
       int carry =1, sum =0;
       
       while(curr!=null)
       {
           sum = curr.val + carry;
           carry = sum/10;
           sum=sum%10;
           curr.val=sum;
           prev = curr;
           curr = curr.next;
       }
       if(carry>0)
        prev.next = new ListNode(carry);
    return head;
   }    
    
}
